name: Test RTF and WER of C++ websocket

on:
  push:
    branches:
      - rtf
    paths:
      - '.github/workflows/test-websocket-rtf-wer.yaml'
      - '.github/scripts/test-websocket-rtf-wer.sh'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa/csrc/**'
      - 'sherpa/cpp_api/**'
  pull_request:
    types: [labeled]
    paths:
      - '.github/workflows/test-websocket-rtf-wer.yaml'
      - '.github/scripts/test-websocket-rtf-wer.sh'
      - 'CMakeLists.txt'
      - 'cmake/**'
      - 'sherpa/csrc/**'
      - 'sherpa/cpp_api/**'

concurrency:
  group: test_rtf_and_wer_websocket-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_rtf_and_wer_websocket:
    if: github.event.label.name == 'rtf' || github.event_name == 'push'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        torch: ["1.10.0"]
        torchaudio: ["0.10.0"]
        python-version: ["3.8"]
        build_type: ["Release"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display clang version
        run: |
          clang --version

      - name: Install PyTorch ${{ matrix.torch }}
        shell: bash
        if: startsWith(matrix.os, 'macos')
        run: |
          python3 -m pip install wheel twine typing_extensions
          python3 -m pip install torch==${{ matrix.torch }} torchaudio==${{ matrix.torchaudio }} numpy -f https://download.pytorch.org/whl/cpu/torch_stable.html

          python3 -m pip install k2==1.17.dev20220813+cpu.torch${{ matrix.torch }} -f https://k2-fsa.org/nightly/index.html

          python3 -m torch.utils.collect_env

      - name: Cache kaldifeat
        id: my-cache-2
        uses: actions/cache@v2
        with:
          path: |
            ~/tmp/kaldifeat
          key: cache-tmp-${{ matrix.python-version }}-${{ matrix.os }}-${{ matrix.torch }}

      - name: Install kaldifeat
        if: steps.my-cache-2.outputs.cache-hit != 'true'
        shell: bash
        run: |
          .github/scripts/install-kaldifeat.sh

      - name: Run RTF test
        shell: bash
        run: |
          export KALDIFEAT_INSTALL_PREFIX=$HOME/tmp/kaldifeat/build
          echo $KALDIFEAT_INSTALL_PREFIX
          ls -lh $KALDIFEAT_INSTALL_PREFIX

          .github/scripts/test-websocket-rtf-wer.sh
          cat ./log.txt
